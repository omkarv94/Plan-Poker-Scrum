{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/react-planning-poker-updated/src/components/PokerRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardValues = [0.5, 1, 1.5, 2, 3, 4, 5, 8, 13];\nexport default function PokerRoom({\n  playerName\n}) {\n  _s();\n  const [votes, setVotes] = useState({});\n  const [revealed, setRevealed] = useState(false);\n  const players = Object.keys(votes).length > 0 ? Object.keys(votes) : [playerName];\n  function handleVote(value) {\n    setVotes(prev => ({\n      ...prev,\n      [playerName]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4 mb-6\",\n      children: cardValues.map(val => /*#__PURE__*/_jsxDEV(Card, {\n        value: val,\n        selected: votes[playerName] === val,\n        onClick: () => handleVote(val)\n      }, val, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setRevealed(true),\n      className: \"mb-6 px-6 py-2 bg-green-600 text-white rounded hover:bg-green-700\",\n      children: \"Reveal Votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-800 mb-2\",\n        children: \"Votes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"bg-white shadow rounded p-4\",\n        children: players.map(p => {\n          var _votes$p;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex justify-between py-1 border-b last:border-b-0 text-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-mono\",\n              children: revealed ? (_votes$p = votes[p]) !== null && _votes$p !== void 0 ? _votes$p : \"-\" : votes[p] ? \"ðŸ™ˆ\" : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, p, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(PokerRoom, \"eiYD0Ko3t9oITi8UOCGI7rrqEyw=\");\n_c = PokerRoom;\nvar _c;\n$RefreshReg$(_c, \"PokerRoom\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","cardValues","PokerRoom","playerName","_s","votes","setVotes","revealed","setRevealed","players","Object","keys","length","handleVote","value","prev","className","children","map","val","selected","onClick","fileName","_jsxFileName","lineNumber","columnNumber","p","_votes$p","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/react-planning-poker-updated/src/components/PokerRoom.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from './Card';\n\nconst cardValues = [0.5, 1, 1.5, 2, 3, 4, 5, 8, 13];\n\nexport default function PokerRoom({ playerName }) {\n  const [votes, setVotes] = useState({});\n  const [revealed, setRevealed] = useState(false);\n\n  const players = Object.keys(votes).length > 0 ? Object.keys(votes) : [playerName];\n\n  function handleVote(value) {\n    setVotes(prev => ({ ...prev, [playerName]: value }));\n  }\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"grid grid-cols-3 gap-4 mb-6\">\n        {cardValues.map((val) => (\n          <Card\n            key={val}\n            value={val}\n            selected={votes[playerName] === val}\n            onClick={() => handleVote(val)}\n          />\n        ))}\n      </div>\n\n      <button\n        onClick={() => setRevealed(true)}\n        className=\"mb-6 px-6 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n      >\n        Reveal Votes\n      </button>\n\n      <div className=\"w-full max-w-md\">\n        <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">Votes:</h3>\n        <ul className=\"bg-white shadow rounded p-4\">\n          {players.map((p) => (\n            <li key={p} className=\"flex justify-between py-1 border-b last:border-b-0 text-gray-700\">\n              <span>{p}</span>\n              <span className=\"font-mono\">\n                {revealed ? votes[p] ?? \"-\" : votes[p] ? \"ðŸ™ˆ\" : \"-\"}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}